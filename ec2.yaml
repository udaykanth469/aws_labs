---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    aws_region:  ap-southeast-2
  tasks:
  
  ## Creating VPC group"
  
    - name: Crete VPC Group ansible vpc group
      ec2_vpc_net:
           name: Ansible_vpc
           region: "{{aws_region}}"
           cidr_block: 10.0.0.0/16
           tags:
               Environment: Development
      register: vpc
 
 ## Storing vpc group in the register to use the values in the playbook later
 
 ## Create Subnet and assign to VPC group
 
     
    - name: Create Subnet 1 and assign to VPC
      ec2_vpc_subnet:
           state: present
           region: "{{aws_region}}"
           vpc_id: "{{vpc.vpc.id}}"
           cidr: 10.0.1.0/24
           resource_tags:
              Name: 10.0.1.0/24-my-subnet
      register: publicSubnet
      
      
    - name: createing subnet 2
      ec2_vpc_subnet:
           state: present
           region: "{{aws_region}}"
           vpc_id: "{{vpc.vpc.id}}"
           cidr: 10.0.2.0/24
           resource_tags:
              Name: 10.0.2.0/24-my-subnet
    - name: Create Internet Gateway
      ec2_vpc_igw:
           vpc_id: "{{vpc.vpc.id}}"
           region: "{{aws_region}}"
           state: present
           tags:
              Name: 10.0.1.0/24-gatewaysubnet
    - name: assign subnet to internet Gatway
      ec2_vpc_route_table:
           vpc_id: "{{vpc.vpc.id}}"
           region: "{{aws_region}}"
           tags:
              Name: Public
           subnets:
             - "{{publicSubnet.subnet.id}}"
           routes:
              - dest: 0.0.0.0/0
                gateway_id: "igw"
   
   - name: Create security and assign to VPC
      ec2_group:
           name: Ansible SSH and http
           description: accessible for ssh and http
           vpc_id: "{{vpc.vpc.id}}"
           region: "{{aws_region}}"
           rules:
              - proto: tcp
                from_port: 22
                to_port: 22
                cidr_ip: 0.0.0.0./0
              - proto: tcp
                from_port: 80
                to_port: 80
                cidr_ip: 0.0.0.0/0
           rules_egress:
              - proto: all
                cidr_ip: 0.0.0.0/0
      register: sgroup            
                
                
   - name: Create EC2 instance
      ec2:
           image: ami-67589505
           instance_type: t2.micro
           wait: yes
           group_id: "{{sgroup.group_id}}"
           region: "{{aws_region}}"
           key_name: ansible
           count_tag:
               name: appserver
           exact_count: 1
           volumes:
               - device_name: /dev/sda1
                 volume_type: gp2
                 volume_size: 10
           vpc_subnet_id: "{{publicSubnet.subnet.id}}"
           assign_public_ip: yes
           instance_tags:
                     Name: web
      register: vms
      
    - name: wait for ssh to come up
      wait_for:
           host: "{{item.private_ip}}"
           port: 22
           state: started
      with_items: "{{vms.instances}}"
      
      
